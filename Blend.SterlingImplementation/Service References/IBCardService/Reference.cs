//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Blend.SterlingImplementation.IBCardService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IBCardService.ICardServ")]
    public interface ICardServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardServ/CardOps", ReplyAction="http://tempuri.org/ICardServ/CardOpsResponse")]
        string CardOps(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardServ/CardOps", ReplyAction="http://tempuri.org/ICardServ/CardOpsResponse")]
        System.Threading.Tasks.Task<string> CardOpsAsync(string request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardServ/GetActiveChannels", ReplyAction="http://tempuri.org/ICardServ/GetActiveChannelsResponse")]
        string GetActiveChannels(string PAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardServ/GetActiveChannels", ReplyAction="http://tempuri.org/ICardServ/GetActiveChannelsResponse")]
        System.Threading.Tasks.Task<string> GetActiveChannelsAsync(string PAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardServ/GetActiveCountries", ReplyAction="http://tempuri.org/ICardServ/GetActiveCountriesResponse")]
        string GetActiveCountries(string PAN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICardServ/GetActiveCountries", ReplyAction="http://tempuri.org/ICardServ/GetActiveCountriesResponse")]
        System.Threading.Tasks.Task<string> GetActiveCountriesAsync(string PAN);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICardServChannel : Blend.SterlingImplementation.IBCardService.ICardServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CardServClient : System.ServiceModel.ClientBase<Blend.SterlingImplementation.IBCardService.ICardServ>, Blend.SterlingImplementation.IBCardService.ICardServ {
        
        public CardServClient() {
        }
        
        public CardServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CardServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CardOps(string request) {
            return base.Channel.CardOps(request);
        }
        
        public System.Threading.Tasks.Task<string> CardOpsAsync(string request) {
            return base.Channel.CardOpsAsync(request);
        }
        
        public string GetActiveChannels(string PAN) {
            return base.Channel.GetActiveChannels(PAN);
        }
        
        public System.Threading.Tasks.Task<string> GetActiveChannelsAsync(string PAN) {
            return base.Channel.GetActiveChannelsAsync(PAN);
        }
        
        public string GetActiveCountries(string PAN) {
            return base.Channel.GetActiveCountries(PAN);
        }
        
        public System.Threading.Tasks.Task<string> GetActiveCountriesAsync(string PAN) {
            return base.Channel.GetActiveCountriesAsync(PAN);
        }
    }
}
